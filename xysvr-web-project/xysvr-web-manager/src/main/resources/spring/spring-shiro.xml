<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util.xsd"
    default-lazy-init="false">


    <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager" />
        <property name="arguments" ref="securityManager" />
    </bean>

    <!-- 限制密码重试次数凭证管理器 -->
    <bean id="credentialsMatcher" class="cn.xyspace.xysvr.function.manager.user.shiro.credentials.MgrRetryLimitHashedCredentialsMatcher">
        <constructor-arg ref="shiroCacheManager" />
        <property name="hashAlgorithmName" value="SHA-1" />
        <property name="hashIterations" value="1024" />
        <property name="storedCredentialsHexEncoded" value="true" />
    </bean>

    <!-- 项目自定义的Realm -->
    <bean id="shiroDbRealm" class="cn.xyspace.xysvr.function.manager.user.shiro.MgrShiroDbRealm">
        <property name="credentialsMatcher" ref="credentialsMatcher" />
        <property name="cachingEnabled" value="false" />
    </bean>

    <!-- 权限管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!-- 数据库认证的实现 cn.xyspace.xysvr.common.user.shrio.ShiroDbRealm -->
        <property name="realm" ref="shiroDbRealm" />
        <!-- session管理器 -->
        <property name="sessionManager" ref="sessionManager" />
        <!-- 缓存管理器 -->
        <property name="cacheManager" ref="shiroCacheManager" />
        <!-- rememberMe管理器 -->
        <property name="rememberMeManager" ref="rememberMeManager" />
    </bean>

    <!-- session验证调度器
        <bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
        <property name="sessionValidationInterval" value="360000" />
        <property name="sessionManager" ref="sessionManager" />
        </bean>
    -->

    <!-- session管理器 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <!-- 超时时间 -->
        <property name="globalSessionTimeout" value="1800000" />
        <property name="deleteInvalidSessions" value="true" />
        <!-- session存储的实现 -->
        <property name="sessionDAO" ref="redisSessionDAO" />
        <property name="sessionIdCookieEnabled" value="true" />
        <!-- sessionIdCookie的实现，用于重写覆盖容器默认的JSESSIONID -->
        <property name="sessionIdCookie" ref="sessionIdCookie" />
        <!-- 定时检查失效的session -->
        <property name="sessionValidationSchedulerEnabled" value="true" />
        <!-- <property name="sessionValidationScheduler" ref="sessionValidationScheduler" /> -->
    </bean>

    <!-- 会话Cookie模板，用于重写覆盖容器默认的JSESSIONID -->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <!-- 设置cookie的name，默认是 JSESSIONID -->
        <constructor-arg name="name" value="sid" />
        <property name="httpOnly" value="true" />
        <property name="maxAge" value="-1" />
    </bean>

    <!-- rememberMe会话Cookie -->
    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="rememberMe" />
        <property name="httpOnly" value="true" />
        <property name="maxAge" value="2592000" /><!-- 30天 -->
    </bean>

    <!-- rememberMe管理器 -->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <!-- rememberMe Cookie加密密钥，建议每个项目都不一样，默认AES算法，密钥长度（128、256、512位） -->
        <property name="cipherKey" value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}" />
        <property name="cookie" ref="rememberMeCookie" />
    </bean>

    <!-- redisSessionDAO -->
    <bean id="redisSessionDAO" class="com.baayso.shiro.redis.RedisSessionDAO">
        <property name="redisManager" ref="redisManager" />
        <property name="keyPrefix" value="xysvr2-mgr:shiro_redis_session:" />
    </bean>

    <!-- session存储的实现 -->
    <!-- <bean id="shiroSessionDao" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO" /> -->

    <!-- 控制并发登录人数过滤器 -->
    <bean id="kickoutSessionControlFilter" class="cn.xyspace.xysvr.function.manager.user.shiro.filter.MgrKickoutSessionControlFilter">
        <!-- 使用 cacheManager获取相应的 cache来缓存用户登录的会话；用于保存用户-会话之间的关系 -->
        <property name="cacheManager" ref="shiroCacheManager" />
        <!-- 用于根据会话 ID， 获取会话进行踢出操作 -->
        <property name="sessionManager" ref="sessionManager" />
        <!-- 是否踢出后来登录的，默认是false；即后者登录的用户踢出前者登录的用户 -->
        <property name="kickoutAfter" value="false" />
        <!-- 同一个用户最大的会话数，默认 1；比如 2的意思是同一个用户允许最多同时两个人登录 -->
        <property name="maxSession" value="1" />
        <!-- 被踢出后重定向到的地址 -->
        <property name="kickoutUrl" value="/user/login" />
    </bean>

    <bean id="sysUserFilter" class="cn.xyspace.xysvr.function.manager.user.shiro.filter.SysUserFilter" />

    <!-- Shiro Filter -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager" />
        <property name="loginUrl" value="/user/login" />
        <property name="successUrl" value="/index" />
        <property name="unauthorizedUrl" value="/unauthorized" />
        <property name="filters">
            <util:map>
                <entry key="kickout" value-ref="kickoutSessionControlFilter" />
                <entry key="sysUser" value-ref="sysUserFilter" />
            </util:map>
        </property>
        <property name="filterChainDefinitions">
            <value>
                /alipay/notify = anon
                /lib/** = anon
                /static/** = anon
                /user/login = authc
                /user/logout = logout
                /** = kickout,user
            </value>
        </property>
    </bean>

    <!-- 起效权限注解,这个很少在web项目中用到,一般是控制url的访问,不是在controller中声明权限注解 -->
    <!-- <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" /> -->
</beans>